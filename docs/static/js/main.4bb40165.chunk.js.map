{"version":3,"sources":["GifExpertApp/Components/AddCategory.js","GifExpertApp/Components/GridItem.js","GifExpertApp/Helpers/getGifs.js","GifExpertApp/Containers/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setNumbers","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","GridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"8KAEaA,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,UAAU,OAAOC,SAVN,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,EAAWE,GAEXC,EAAc,MAKlB,SACI,uBAAOC,UAAU,cAAcM,KAAK,OAAOC,MAAOT,EAAYU,SAdjD,SAACN,GAClBH,EAAcG,EAAEO,OAAOF,QAamEG,YAAY,oBClBjGC,EAAW,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC7B,OACI,oBAAIb,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAYc,IAAKD,EAAKE,IAAKH,EAAOA,MAAOA,O,uBCHvDI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEDG,MAAMP,GAFL,cAEbQ,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAWZW,GAXY,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAACd,IAEGe,EDb0BK,CAAapB,GAAjCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OACI,qCACI,iDAAoBd,EAApB,OACA,qBAAIjB,UAAU,QAAd,UACK+B,GAAW,gDACXH,EAAOH,KAAI,YAAuB,IAArBE,EAAoB,EAApBA,GAAIf,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACrB,OAAO,cAAC,EAAD,CAAmBD,MAAOA,EAAOC,IAAKA,GAAvBc,aEV7BW,EAAe,WAExB,MAAoCzC,mBAAS,aAA7C,mBAAO0C,EAAP,KAAmBC,EAAnB,KACA,OACI,qCACI,sBAAKxC,UAAU,YAAf,UACI,oBAAIA,UAAU,mBAAd,0BACA,mBAAGA,UAAU,kBAAb,2FACA,cAAC,EAAD,CAAaJ,WAAY4C,OAE7B,qBAAKxC,UAAU,QAAf,SAEI,cAAC,EAAD,CAA0BiB,SAAUsB,GAAtBA,S,MCX9BE,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.4bb40165.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setNumbers}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0){\r\n            setNumbers(inputValue);\r\n            // setNumbers(n => [inputValue, ...n]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"from\" onSubmit={handleSubmit}>\r\n            <input className=\"from__input\" type=\"text\" value={inputValue} onChange={handleChange} placeholder=\"Escribe algo\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setNumbers: PropTypes.func.isRequired\r\n}","export const GridItem = ({title, url}) => {\r\n    return (\r\n        <li className=\"card\">\r\n            <img className=\"card__img\" src={url} alt={title} title={title}/>\r\n        </li>\r\n    );\r\n}\r\n","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=66jxY7494rLDgFEi0zurjRPZTfCn7k2g`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import { GridItem } from \"../Components/GridItem\";\r\n\r\nimport { useFetchGifs } from \"../../Hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2>Resultados de \"{category}\"</h2>\r\n            <ul className=\"cards\">\r\n                {loading && <p>Loading Gifs...</p>}\r\n                {images.map(({id, title, url}) => {\r\n                    return <GridItem key={id} title={title} url={url}/>\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from \"../GifExpertApp/Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });    \r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\"\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from \"./Containers/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    // const [categories, setCategories] = useState(['One Punch']);\r\n    const [categories, setCategories] = useState('One Punch');\r\n    return (\r\n        <>\r\n            <div className=\"introduce\">\r\n                <h1 className=\"introduce__title\">GifExpertApp</h1>\r\n                <p className=\"introduce__copy\">Bienvenido, en este sitio web encontraras gifs divertidos para pasar el rato.</p>\r\n                <AddCategory setNumbers={setCategories}/>\r\n            </div>\r\n            <div className=\"group\">\r\n                {/* {categories.map(category => <GifGrid key={category} category={category}/>)} */}\r\n                <GifGrid key={categories} category={categories}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('main'));"],"sourceRoot":""}